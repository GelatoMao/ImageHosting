{"version":3,"sources":["models/index.js","stores/user.js","stores/history.js","stores/image.js","stores/auth.js","stores/index.js","components/logo.svg","components/Header.js","components/Footer.js","components/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["AV","init","appId","appKey","serverURL","Auth","username","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","then","loginUser","error","logIn","logOut","current","Uploader","add","file","filename","item","Object","avFile","File","set","save","serverFile","err","find","page","limit","query","Query","include","skip","descending","equalTo","results","catch","window","makeObservable","this","currentUser","observable","action","newList","list","concat","isLoading","append","length","hasMore","message","finally","newFilename","newFile","values","UserStore","pullUser","resetUser","HistoryStore","reset","ImageStore","context","createContext","AuthStore","store","useStores","useContext","Header","styled","header","Logo","img","Login","div","StyledLink","NavLink","StyledButton","Button","ComponentHeader","observer","history","useHistory","src","LogoUrl","to","exact","activeClassName","attributes","type","onClick","logout","console","log","push","Footer","footer","ComponentFooter","Loading","Home","lazy","History","About","Register","App","fallback","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eacca686.chunk.js","sourcesContent":["import AV, { User } from 'leancloud-storage'\n\nAV.init({\n  appId: \"R72DS9VJcKpeUsAoilodYc67-9Nh9j0Va\",\n  appKey: \"IFaaVRRCHQPkyw4g3VBwzD6T\",\n  serverURL: \"https://r72ds9vj.lc-cn-e1-shared.com\"\n})\n\n// 用户注册登录\nconst Auth = {\n  register(username, password) {\n    let user = new User()\n    user.setUsername(username)\n    user.setPassword(password)\n    return new Promise((resolve, reject) => {\n      user.signUp().then(loginUser => resolve(loginUser), error => reject(error))\n    })\n  },\n\n  login(username, password) {\n    return new Promise((resolve, reject) => {\n      User.logIn(username, password).then(loginUser => resolve(loginUser), error => reject(error));\n    })\n  },\n\n  logout() {\n    User.logOut()\n  },\n\n  getCurrentUser() {\n    return User.current()\n  }\n\n}\n\n\n// 上传图片\nconst Uploader = {\n  add(file, filename) {\n    const item = new AV.Object('Image')\n    const avFile = new AV.File(filename, file)\n    item.set('filename', filename)\n    item.set('owner', AV.User.current())\n    item.set('url', avFile)\n    return new Promise((resolve, reject) => {\n      item.save().then(serverFile => resolve(serverFile), err => reject(err))\n    })\n  },\n  find({ page = 0, limit = 10 }) {\n    const query = new AV.Query('Image')\n    query.include('owner')\n    query.limit(limit)\n    query.skip(page * limit)\n    query.descending('createdAt')\n    // 只能查询自己的图片\n    query.equalTo('owner', AV.User.current())\n    return new Promise((resolve, reject) => {\n      query.find().then(results => resolve(results)).catch(error => reject(error))\n    })\n  }\n}\n\nwindow.Uploader = Uploader\n\n\nexport { Auth, Uploader }","// 存储用户信息\nimport { observable, action, makeObservable } from 'mobx'\nimport { Auth } from '../models'\n\n\nclass UserStore {\n  // 处理mobx6以上版本兼容导致渲染延时问题\n  constructor() {\n    makeObservable(this)\n  }\n\n  @observable currentUser = null\n\n  @action pullUser() {\n    this.currentUser = Auth.getCurrentUser()\n  }\n\n  @action resetUser() {\n    this.currentUser = null\n  }\n\n}\n\nexport default new UserStore()\n","// 处理登录注册相关的状态和行为\nimport { observable, action, makeObservable } from 'mobx'\nimport { Uploader } from '../models'\nimport { message } from 'antd'\n\nclass HistoryStore {\n  // 处理mobx6以上版本兼容导致渲染延时问题 \n  constructor() {\n    makeObservable(this)\n  }\n\n  // 属性\n  @observable list = []\n  @observable isLoading = false\n  @observable hasMore = true\n  limit = 10\n\n  @action append(newList) {\n    this.list = this.list.concat(newList)\n  }\n\n  @action find() {\n    this.isLoading = true\n    Uploader.find({ page: this.page, limit: this.limit })\n      .then(newList => {\n        this.append(newList)\n        this.page++\n        if (newList.length < this.limit) {\n          this.hasMore = false\n        }\n      }).catch(error => {\n        message.error('加载失败')\n      }).finally(() => {\n        this.isLoading = false\n      })\n  }\n\n  @action reset() {\n    this.list = []\n    this.isLoading = false\n    this.hasMore = true\n    this.page = 0\n  }\n\n}\n\nexport default new HistoryStore()\n","// 用于管理上传图片的数据\nimport { observable, action, makeObservable } from 'mobx'\nimport { Uploader } from '../models'\nimport { message } from 'antd'\n\nclass ImageStore {\n  // 处理mobx6以上版本兼容导致渲染延时问题 \n  constructor() {\n    makeObservable(this)\n  }\n\n  // 属性\n  @observable filename = \"\"\n  @observable file = null\n  @observable isLoading = false\n  @observable serverFile = null\n\n  @action setFilename(newFilename) {\n    this.filename = newFilename\n  }\n\n  @action setFile(newFile) {\n    this.file = newFile\n  }\n\n  @action upload() {\n    this.isLoading = true\n    // 每次上传的时候设置serverFile为null 防止上传图片的过程中展示的还是上次的图片\n    this.serverFile = null\n    return new Promise((resolve, reject) => {\n      Uploader.add(this.file, this.filename).then(serverFile => {\n        this.serverFile = serverFile\n        resolve(serverFile)\n      }).catch(err => {\n        message.error('上传失败')\n        reject(err)\n      }).finally(() => {\n        this.isLoading = false\n      })\n    })\n  }\n\n  @action reset() {\n    this.isLoading = false\n    this.serverFile = null\n  }\n}\n\nexport default new ImageStore()\n","// 处理登录注册相关的状态和行为\nimport { observable, action, makeObservable } from 'mobx'\nimport { Auth } from '../models'\nimport UserStore from './user'\nimport HistoryStore from './history'\nimport ImageStore from './image'\nimport { message } from 'antd'\n\nclass AuthStore {\n  // 处理mobx6以上版本兼容导致渲染延时问题 \n  constructor() {\n    makeObservable(this)\n  }\n\n  // 属性\n  @observable values = {\n    username: '',\n    password: ''\n  };\n\n  // 方法\n  @action setUsername(username) {\n    this.values.username = username\n  }\n\n  @action setPassword(password) {\n    this.values.password = password\n  }\n\n  @action login() {\n    return new Promise((resolve, reject) => {\n      Auth.login(this.values.username, this.values.password)\n        .then(user => {\n          UserStore.pullUser()\n          resolve(user)\n        }).catch(err => {\n          UserStore.resetUser()\n          message.error('登录失败')\n          reject(err)\n        })\n    })\n  }\n\n  @action register() {\n    return new Promise((resolve, reject) => {\n      Auth.register(this.values.username, this.values.password)\n        .then(user => {\n          UserStore.pullUser()\n          resolve(user)\n        }).catch((err) => {\n          UserStore.resetUser()\n          message.error('注册失败')\n          reject(err)\n        })\n    })\n  }\n\n  @action logout() {\n    Auth.logout()\n    UserStore.resetUser()\n    HistoryStore.reset()\n    ImageStore.reset()\n  }\n}\n\nexport default new AuthStore()\n","import React, { createContext, useContext } from 'react'\nimport AuthStore from './auth'\nimport UserStore from './user'\nimport ImageStore from './image'\nimport HistoryStore from './history'\n\nconst context = createContext({\n  AuthStore,\n  UserStore,\n  ImageStore,\n  HistoryStore\n})\n\nwindow.store = {\n  AuthStore,\n  UserStore,\n  ImageStore\n}\n\n// 调用useStores方法 就会解构出context中的东西\nexport const useStores = () => useContext(context)","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Button } from 'antd'\nimport { useStores } from '../stores'\nimport { observer } from 'mobx-react'\nimport LogoUrl from './logo.svg'\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  padding: 10px 100px;\n  background-color: #02101f;\n  color: #fff;\n`\nconst Logo = styled.img`\n  height: 30px;\n`\nconst Login = styled.div`\n  margin-left: auto;\n`\n\n// 因为NavLink本身就是一个组件而不是标签 在组件上修改样式 需要将styled转成函数\nconst StyledLink = styled(NavLink)`\n  color: #fff;\n  margin-left: 30px;\n  &.active{\n    border-bottom: 1px solid #fff;\n  }\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 10px;\n`\n\nconst ComponentHeader = observer(() => {\n\n  const { UserStore, AuthStore } = useStores()\n  const history = useHistory()\n\n  const handleLogin = () => {\n    console.log('跳转到登录页面')\n    history.push('/login')\n  }\n\n  const handleLogout = () => {\n    AuthStore.logout()\n  }\n\n  const handleRegister = () => {\n    console.log('跳转到注册页面')\n    history.push('/register')\n  }\n\n  return (\n    <Header>\n      <Logo src={LogoUrl} />\n      <nav>\n        <StyledLink to=\"/\" exact activeClassName=\"active\">首页</StyledLink>\n        <StyledLink to=\"/history\" activeClassName=\"active\">上传历史</StyledLink>\n        <StyledLink to=\"/about\" activeClassName=\"active\">关于</StyledLink>\n      </nav>\n      <Login>\n        {\n          UserStore.currentUser ? <>{UserStore.currentUser.attributes.username}<StyledButton type=\"primary\" onClick={handleLogout}>注销</StyledButton></> :\n            <>\n              <StyledButton type=\"primary\" onClick={handleLogin}>登录</StyledButton>\n              <StyledButton type=\"primary\" onClick={handleRegister}>注册</StyledButton>\n            </>\n        }\n      </Login>\n    </Header>\n  )\n})\n\n\nexport default ComponentHeader","import React from 'react'\nimport styled from 'styled-components'\n\nconst Footer = styled.footer`\n  padding: 10px 100px;\n  text-align: center;\n  font-size: 12px;\n  color: #aaa;\n`\nfunction ComponentFooter() {\n  return (\n    <Footer>\n      <p>Footer</p>\n    </Footer>\n  )\n}\n\nexport default ComponentFooter","import React from 'react'\n\nfunction Loading() {\n  return (\n    <div>Loading...</div>\n  )\n}\n\nexport default Loading","import React, { Suspense, lazy } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Loading from './components/Loading'\n\n// Home History About进行异步加载\n// import Home from './pages/Home'\n// import History from './pages/History'\n// import About from './pages/About'\nconst Home = lazy(() => import('./pages/Home'))\nconst History = lazy(() => import('./pages/History'))\nconst About = lazy(() => import('./pages/About'))\nconst Login = lazy(() => import('./pages/Login'))\nconst Register = lazy(() => import('./pages/Register'))\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <main>\n        {/* fallback里面的loading需要以组件的形式传入进来 */}\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/history\" component={History} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n          </Switch>\n        </Suspense>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { HashRouter as Router } from 'react-router-dom'\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\nreportWebVitals()\n"],"sourceRoot":""}